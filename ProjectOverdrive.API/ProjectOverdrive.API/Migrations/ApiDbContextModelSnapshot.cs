// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectOverdrive.API.Data;

#nullable disable

namespace ProjectOverdrive.API.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    partial class ApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ProjectOverdrive.API.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Cep")
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<string>("Contact")
                        .HasColumnType("longtext");

                    b.Property<string>("District")
                        .HasColumnType("longtext");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("ProjectOverdrive.API.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Cnae")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("cnae");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("cnpj");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)")
                        .HasColumnName("name_company");

                    b.Property<string>("FantasyName")
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)")
                        .HasColumnName("fantasy_name");

                    b.Property<double>("Finance")
                        .HasColumnType("double")
                        .HasColumnName("Finance");

                    b.Property<int>("IdAddress")
                        .HasColumnType("int")
                        .HasColumnName("IdAddress");

                    b.Property<string>("LegalNature")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("legal_nature");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("start_date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("IdAddress");

                    b.ToTable("company");
                });

            modelBuilder.Entity("ProjectOverdrive.API.Models.People", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("cpf");

                    b.Property<int?>("IdCompany")
                        .HasColumnType("int")
                        .HasColumnName("IdCompany");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("name");

                    b.Property<string>("NumberContact")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("number_contact");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("status");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex("IdCompany");

                    b.ToTable("people");
                });

            modelBuilder.Entity("ProjectOverdrive.API.Models.Company", b =>
                {
                    b.HasOne("ProjectOverdrive.API.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("IdAddress")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("ProjectOverdrive.API.Models.People", b =>
                {
                    b.HasOne("ProjectOverdrive.API.Models.Company", "Company")
                        .WithMany("peoples")
                        .HasForeignKey("IdCompany");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ProjectOverdrive.API.Models.Company", b =>
                {
                    b.Navigation("peoples");
                });
#pragma warning restore 612, 618
        }
    }
}
